#
# Copyright 2019 EPAM Systems
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

info.build.name=API Service
info.build.description=ReportPortal API Service
info.build.version=${version}
info.build.branch=${branch}
info.build.repo=${repo}

management.endpoints.web.base-path=/
#security.sessions=never
#security.basic.enabled=false
management.server.servlet.context-path=/admin

## Supported period format details
## https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-
#CRON expression for project setting 'interrupt launches' as every 1 hours
com.ta.reportportal.job.interrupt.broken.launches.cron=PT1H
#CRON expression for project setting 'keep screenshots' as every 7 days
#com.ta.reportportal.job.clean.screenshots.cron=P7D
com.ta.reportportal.job.clean.screenshots.cron=\${rp.clean.attach.cron:P3D}
com.ta.reportportal.job.load.plugins.cron=PT1M
com.ta.reportportal.job.clean.outdated.plugins.cron=PT1M
#CRON expression for project setting 'keep logs' as every 14 days
#com.ta.reportportal.job.clean.logs.cron=P14D
com.ta.reportportal.job.clean.logs.cron=\${rp.clean.logs.cron:P7D}
com.ta.reportportal.job.clean.logs.timeout=300
com.ta.reportportal.job.clean.launches.cron=\${rp.clean.launches.cron:P7D}
com.ta.reportportal.job.clean.launches.timeout=300
com.ta.reportportal.job.clean.bids.cron=PT1H

spring.jooq.sql-dialect=POSTGRES

datastore.default.path=\${rp.binarystore.path:/data/storage}
datastore.seaweed.master.host=\${rp.binarystore.master.host:localhost}
datastore.seaweed.master.port=\${rp.binarystore.master.port:9333}
datastore.minio.endpoint=\${rp.binarystore.minio.endpoint:https://play.min.io}
datastore.minio.accessKey=\${rp.binarystore.minio.accessKey:Q3AM3UQ867SPQQA43P2F}
datastore.minio.secretKey=\${rp.binarystore.minio.secretKey:zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG}
datastore.minio.region=\${rp.binarystore.minio.region:#{null}}
# could be one of [seaweed, filesystem, minio]
datastore.type=\${rp.binarystore.type:filesystem}
datastore.thumbnail.attachment.width=\${rp.binarystore.thumbnail.attachment.width:80}
datastore.thumbnail.attachment.height=\${rp.binarystore.thumbnail.attachment.height:60}
datastore.thumbnail.avatar.width=\${rp.binarystore.thumbnail.avatar.width:40}
datastore.thumbnail.avatar.height=\${rp.binarystore.thumbnail.avatar.height:60}

# Metrics
management.endpoints.web.exposure.include=prometheus, metrics, info, health
management.metrics.web.server.request.autotime.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=5s
management.metrics.tags.version=${version}
management.metrics.tags.application=api
